// Jenkinsfile (Declarative Pipeline)
pipeline {
  agent any
  stages {
    stage('Build') {
      steps {
        //clone repo
        git url: 'https://github.com/EvgenyVerevkin/surf.git', branch: 'main', credentialsId: '4b338890-ce1b-4ba2-acc3-59675141bc52'
        //make file and add data to file
        script {
          def date = new Date()
          def data = date.format("yyyy-MM-dd HH:mm") + " - PRjob executed"
          writeFile(file: 'job.log', text: data)
          sh 'ls -l'
          sh 'cat job.log'
        }
        //commit and push
        script {
              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                withCredentials([usernamePassword(credentialsId: '4b338890-ce1b-4ba2-acc3-59675141bc52', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    def encodedPassword = URLEncoder.encode("$GIT_PASSWORD",'UTF-8')
                    sh "git config user.email greengoo.nvkz@yandex.ru"
                    sh "git config user.name EvgenyVerevkin"
                    sh "git add ."
                    sh "git commit -m 'Triggered Build: ${env.BUILD_NUMBER}'"
                    sh "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USERNAME}/surf.git"
                }
              }
            }
      }
    }
  }
  post {
    always{
                emailext to: "ait.nvkz@yandex.ru",
                subject: "Jenkins pipeline execution result",
                body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\n Repo link: https://github.com/EvgenyVerevkin/surf.git"
            }
  }
}